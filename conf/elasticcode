
upstream webserver {
  server 192.168.1.237:9001 max_fails=3 fail_timeout=120s;
}

limit_req_zone $binary_remote_addr zone=one:10m rate=40r/m;
limit_conn_zone $binary_remote_addr zone=addr:10m;

proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;


server {
    listen   80;
    listen   [::]:80;

    server_name www.elasticcode.ai;

    return 301 https://www.elasticcode.ai$request_uri;
}

server {
    listen   443  ssl;

    server_name www.elasticcode.ai;

    client_body_timeout 5s;
    client_header_timeout 5s;

    client_max_body_size 50m;

    ssl    on;

    ssl_certificate    /etc/nginx/certs/elasticcode.crt;
    ssl_certificate_key    /etc/nginx/certs/elasticcode.key;

    access_log /var/log/nginx/nginx.vhost.access.log;
    error_log /var/log/nginx/nginx.vhost.error.log;

    underscores_in_headers on;
    proxy_read_timeout 5m;

    if ($http_origin ~* (.*\.rapidquest.com)) {
        set $cors "true";
    }

    location /api {
        proxy_pass http://192.168.1.235:8000/;
    }

    location / {
        proxy_pass http://192.168.1.237:9001/;
    }
}
