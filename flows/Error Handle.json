{
	"nodes": [
		{
			"icon": "las la-scroll",
			"style": "",
			"type": "script",
			"name": "Script",
			"label": "Script",
			"description": "A script description",
			"package": "my.python.package",
			"version": "1.0.0",
			"disabled": false,
			"columns": [
				{
					"name": "function: emit_one",
					"icon": "outlet-icon",
					"type": "Output",
					"background": "white",
					"datatype": "Column",
					"schema": null,
					"template": "Object",
					"id": "port83504cd133e8429e96f7face9eaef57e",
					"description": "A description",
					"queue": "None"
				},
				{
					"name": "one",
					"icon": "fab fa-python",
					"type": "Input",
					"argument": true,
					"function": "emit_one",
					"background": "#eee",
					"datatype": "Column",
					"schema": null,
					"template": "Object",
					"id": "port8ac91896de234f54be8ee2cd0d6717dd",
					"description": "A description",
					"queue": "None",
					"data": 4
				},
				{
					"name": "error: emit_one",
					"icon": "fas fa-exclamation",
					"type": "Error",
					"background": "white",
					"datatype": "Column",
					"schema": null,
					"template": "Object",
					"id": "port6c3cab548017498caecc73d69ca24d07",
					"description": "A description",
					"queue": "None"
				},
				{
					"name": "error: bla",
					"icon": "fas fa-exclamation",
					"type": "Error",
					"background": "white",
					"datatype": "Column",
					"schema": null,
					"template": "Object",
					"id": "portcfae41d2c77146bda75a861490f72a1e",
					"description": "A description",
					"queue": "None"
				}
			],
			"properties": [],
			"left": 1304,
			"top": 101,
			"x": 936,
			"y": 145.5,
			"id": "ce9e5b0c-3b8e-4101-90c2-2465631c8155",
			"titletab": false,
			"consoleview": false,
			"receipt": "2023-03-13T18:47:11.267Z",
			"notes": "",
			"variabledata": [],
			"envfacts": true,
			"infengine": true,
			"perworker": true,
			"ratelimit": "60",
			"websocket": "ws://localhost:3003",
			"bandwidth": true,
			"requirements": "",
			"gittag": "",
			"container": false,
			"imagerepo": "local",
			"containerimage": "pyfi/processors:latest",
			"environment": "",
			"usegit": false,
			"enabled": true,
			"endpoint": false,
			"beat": false,
			"streaming": true,
			"api": "/api/processor",
			"concurrency": 3,
			"cron": "* * * * *",
			"interval": -1,
			"useschedule": false,
			"commit": "",
			"gitrepo": "https://github.com/radiantone/pyfi-processors#egg=ext-processor",
			"modulepath": "ext/processors/sample.py",
			"readwrite": 0,
			"status": "stopped",
			"code": "def emit_one(one):\n    \"\"\" emit one \"\"\"\n    raise Exception(\"An exception occurred\")\n    if one: return one\n    return 1\n    \ndef bla():\n    return \"bla\""
		},
		{
			"icon": "las la-file-alt",
			"style": "size:50px",
			"type": "data",
			"name": "Data",
			"description": "A description",
			"package": "ec.blocks.general",
			"version": "1.0.0",
			"label": "Data",
			"disabled": false,
			"columns": [
				{
					"name": "value1",
					"icon": "fas fa-cube",
					"type": "Output",
					"background": "white",
					"datatype": "Column",
					"schema": null,
					"template": "Object",
					"id": "port65ef8554396d4784a2ed621868ebb535",
					"description": "A description",
					"queue": "None"
				}
			],
			"properties": [],
			"left": 700,
			"top": -229,
			"x": 539,
			"y": 403.5,
			"id": "fafd0a2d-dc58-4f39-8ef8-36138c24476c",
			"titletab": false,
			"receipt": "2023-03-13T18:47:12.464Z",
			"notes": "",
			"perworker": true,
			"ratelimit": "60",
			"websocket": "ws://localhost:3003",
			"bandwidth": true,
			"requirements": "",
			"gittag": "",
			"container": true,
			"imagerepo": "local",
			"containerimage": "pyfi/processors:latest",
			"environment": "",
			"usegit": true,
			"enabled": true,
			"endpoint": false,
			"beat": false,
			"streaming": true,
			"api": "/api/processor",
			"concurrency": 3,
			"cron": "* * * * *",
			"interval": -1,
			"useschedule": false,
			"commit": "",
			"gitrepo": "https://radiantone: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@github.com/radiantone/pyfi-processors#egg=ext-processor",
			"modulepath": "ext/processors/data.py",
			"readwrite": 0,
			"status": "stopped",
			"code": "object1 = {'name':'object1'}\nobject2 = {'name':'object2'}\nvalue1 = 4\nvalue2 = 9\nvalue3 = 11\nvalue4 = 20\nurl = \"http://worldtimeapi.org/api/ip\"\n"
		},
		{
			"icon": "las la-scroll",
			"style": "",
			"type": "script",
			"name": "Script",
			"label": "Script",
			"description": "A script description",
			"package": "my.python.package",
			"version": "1.0.0",
			"disabled": false,
			"columns": [
				{
					"name": "function: emit_one",
					"icon": "outlet-icon",
					"type": "Output",
					"background": "white",
					"datatype": "Column",
					"schema": null,
					"template": "Object",
					"id": "port490649c33e594c03b64e3fb495215282",
					"description": "A description",
					"queue": "None"
				},
				{
					"name": "one",
					"icon": "fab fa-python",
					"type": "Input",
					"argument": true,
					"function": "emit_one",
					"background": "white",
					"datatype": "Column",
					"schema": null,
					"template": "Object",
					"id": "port81c97c4fc5da40edb5ec37f6b530cdfb",
					"description": "A description",
					"queue": "None",
					"data": null
				}
			],
			"properties": [],
			"left": 2205,
			"top": 758,
			"x": 1771,
			"y": 466.5,
			"id": "cb252c34-adf5-454e-9988-9856c181c7f9",
			"titletab": false,
			"consoleview": true,
			"receipt": "2023-03-13T18:47:53.829Z",
			"notes": "",
			"variabledata": [],
			"envfacts": true,
			"infengine": true,
			"perworker": true,
			"ratelimit": "60",
			"websocket": "ws://localhost:3003",
			"bandwidth": true,
			"requirements": "",
			"gittag": "",
			"container": false,
			"imagerepo": "local",
			"containerimage": "pyfi/processors:latest",
			"environment": "",
			"usegit": false,
			"enabled": true,
			"endpoint": false,
			"beat": false,
			"streaming": true,
			"api": "/api/processor",
			"concurrency": 3,
			"cron": "* * * * *",
			"interval": -1,
			"useschedule": false,
			"commit": "",
			"gitrepo": "https://github.com/radiantone/pyfi-processors#egg=ext-processor",
			"modulepath": "ext/processors/sample.py",
			"readwrite": 0,
			"status": "stopped",
			"code": "\ndef emit_one(one):\n    \"\"\" emit one \"\"\"\n    if one: return one\n    return 1"
		},
		{
			"icon": "las la-scroll",
			"style": "",
			"type": "script",
			"name": "Script",
			"label": "Script",
			"description": "A script description",
			"package": "my.python.package",
			"version": "1.0.0",
			"disabled": false,
			"columns": [
				{
					"name": "function: emit_one",
					"icon": "outlet-icon",
					"type": "Output",
					"background": "white",
					"datatype": "Column",
					"schema": null,
					"template": "Object",
					"id": "port60a0ed041d124f8cbd8d3daa35e048c9",
					"description": "A description",
					"queue": "None"
				},
				{
					"name": "one",
					"icon": "fab fa-python",
					"type": "Input",
					"argument": true,
					"function": "emit_one",
					"background": "white",
					"datatype": "Column",
					"schema": null,
					"template": "Object",
					"id": "port309a4be1b1414b16bbc109adf6f7f624",
					"description": "A description",
					"queue": "None",
					"data": null
				}
			],
			"properties": [],
			"left": 2255,
			"top": -405,
			"x": 2187.082629440428,
			"y": 163.22327401372897,
			"id": "5f136618-8a1f-4b28-a283-0381bfd12376",
			"titletab": false,
			"consoleview": true,
			"receipt": "2023-03-13T18:49:42.830Z",
			"notes": "",
			"variabledata": [],
			"envfacts": true,
			"infengine": true,
			"perworker": true,
			"ratelimit": "60",
			"websocket": "ws://localhost:3003",
			"bandwidth": true,
			"requirements": "",
			"gittag": "",
			"container": false,
			"imagerepo": "local",
			"containerimage": "pyfi/processors:latest",
			"environment": "",
			"usegit": true,
			"enabled": true,
			"endpoint": false,
			"beat": false,
			"streaming": true,
			"api": "/api/processor",
			"concurrency": 3,
			"cron": "* * * * *",
			"interval": -1,
			"useschedule": false,
			"commit": "",
			"gitrepo": "https://github.com/radiantone/pyfi-processors#egg=ext-processor",
			"modulepath": "ext/processors/sample.py",
			"readwrite": 0,
			"status": "stopped",
			"code": "def open_url(url):\n    from pyodide.http import open_url\n    import json\n    \n    return json.loads(open_url(url).read())\n\ndef fetch():\n    url = \"http://worldtimeapi.org/api/ip\"\n\n    plugs['route A'] = {'some':'data'}\n    return open_url(url)\n    \ndef add_data(data):\n    data['add'] = 'newdata'\n\n    return data\n\ndef emit_one(one, *args, plugs={}, output={}, **kwargs):\n    \"\"\" emit one \"\"\"\n    if one: return one\n    return 1\n\n\ndef emit_two(two, *args, plugs={}, output={}, **kwargs):\n    if two: return two\n    return 5\n\n\ndef add_two(one, two, *args, plugs={}, output={}, **kwargs):\n    return int(one) + int(two)\n\n\ndef emit_add(one, five, *args, plugs={}, output={}, **kwargs):\n    print(\"EMIT_ADD: \", int(one) + int(five))\n    return int(one) + int(five)\n\n\ndef do_something(message, *args, plugs={}, output={}, **kwargs):\n    \"\"\" do_something \"\"\"\n    from random import randrange\n\n    print(\"PLUGS:\", plugs)\n    print(\"DO SOMETHING ELSE!\")\n    print(\"Message:\", message)\n\n    plugs['plug1'] = [\"Message \" + str(message)]\n\n    output['result'] = \"The result!\"\n    output['data'] = {'key': 'result'}\n\n    argstr = ' '.join(args)\n    message = \"TEXT:\" + str(message) + argstr\n    value = randrange(10)\n    graph = {'tag': {'name': 'tagname', 'value': 'tagvalue'}, 'name': 'temperature', 'value': value}\n    print(\"doSomething: GRAPH COMPLETE!\")\n    print(\"doSomething: VALUE\", value)\n    # raise Exception()\n    return {'message': message, 'graph': graph}\n\n\ndef do_this(message, *args, plugs={}, output={}, **kwargs):\n    from random import randrange\n\n    print(\"Do this!\", message)\n\n    argstr = ' '.join(args)\n    message = \"Do this String: \" + str(message) + argstr\n    graph = {'tag': {'name': 'tagname', 'value': 'tagvalue'}, 'name': 'distance', 'value': randrange(50)}\n    print(\"doThis: GRAPH CREATED!\")\n    return {'message': message, 'graph': graph}\n\n\ndef do_that(message, *args, plugs={}, output={}, **kwargs):\n    print(\"Do THAT!\", message)\n\n    argstr = ' '.join(args)\n    return \"Do THAT: \" + str(message) + argstr\n"
		},
		{
			"icon": "las la-scroll",
			"style": "",
			"type": "script",
			"name": "Script",
			"label": "Script",
			"description": "A script description",
			"package": "my.python.package",
			"version": "1.0.0",
			"disabled": false,
			"columns": [
				{
					"name": "function: emit_one",
					"icon": "outlet-icon",
					"type": "Output",
					"background": "white",
					"datatype": "Column",
					"schema": null,
					"template": "Object",
					"id": "port23e187e469cb48a3ae97f9cfcb890c42",
					"description": "A description",
					"queue": "None"
				},
				{
					"name": "one",
					"icon": "fab fa-python",
					"type": "Input",
					"argument": true,
					"function": "emit_one",
					"background": "white",
					"datatype": "Column",
					"schema": null,
					"template": "Object",
					"id": "port672edf02bd954444959625814783cb9f",
					"description": "A description",
					"queue": "None",
					"data": null
				}
			],
			"properties": [],
			"left": 2216,
			"top": 144,
			"x": 2240.6559778680657,
			"y": 219.81037846608683,
			"id": "f76d247e-d068-42a2-a292-81edbecf8890",
			"titletab": false,
			"consoleview": true,
			"receipt": "2023-03-13T19:02:14.395Z",
			"notes": "",
			"variabledata": [],
			"envfacts": true,
			"infengine": true,
			"perworker": true,
			"ratelimit": "60",
			"websocket": "ws://localhost:3003",
			"bandwidth": true,
			"requirements": "",
			"gittag": "",
			"container": false,
			"imagerepo": "local",
			"containerimage": "pyfi/processors:latest",
			"environment": "",
			"usegit": true,
			"enabled": true,
			"endpoint": false,
			"beat": false,
			"streaming": true,
			"api": "/api/processor",
			"concurrency": 3,
			"cron": "* * * * *",
			"interval": -1,
			"useschedule": false,
			"commit": "",
			"gitrepo": "https://github.com/radiantone/pyfi-processors#egg=ext-processor",
			"modulepath": "ext/processors/sample.py",
			"readwrite": 0,
			"status": "stopped",
			"code": "def open_url(url):\n    from pyodide.http import open_url\n    import json\n    \n    return json.loads(open_url(url).read())\n\ndef fetch():\n    url = \"http://worldtimeapi.org/api/ip\"\n\n    plugs['route A'] = {'some':'data'}\n    return open_url(url)\n    \ndef add_data(data):\n    data['add'] = 'newdata'\n\n    return data\n\ndef emit_one(one, *args, plugs={}, output={}, **kwargs):\n    \"\"\" emit one \"\"\"\n    if one: return one\n    return 1\n\n\ndef emit_two(two, *args, plugs={}, output={}, **kwargs):\n    if two: return two\n    return 5\n\n\ndef add_two(one, two, *args, plugs={}, output={}, **kwargs):\n    return int(one) + int(two)\n\n\ndef emit_add(one, five, *args, plugs={}, output={}, **kwargs):\n    print(\"EMIT_ADD: \", int(one) + int(five))\n    return int(one) + int(five)\n\n\ndef do_something(message, *args, plugs={}, output={}, **kwargs):\n    \"\"\" do_something \"\"\"\n    from random import randrange\n\n    print(\"PLUGS:\", plugs)\n    print(\"DO SOMETHING ELSE!\")\n    print(\"Message:\", message)\n\n    plugs['plug1'] = [\"Message \" + str(message)]\n\n    output['result'] = \"The result!\"\n    output['data'] = {'key': 'result'}\n\n    argstr = ' '.join(args)\n    message = \"TEXT:\" + str(message) + argstr\n    value = randrange(10)\n    graph = {'tag': {'name': 'tagname', 'value': 'tagvalue'}, 'name': 'temperature', 'value': value}\n    print(\"doSomething: GRAPH COMPLETE!\")\n    print(\"doSomething: VALUE\", value)\n    # raise Exception()\n    return {'message': message, 'graph': graph}\n\n\ndef do_this(message, *args, plugs={}, output={}, **kwargs):\n    from random import randrange\n\n    print(\"Do this!\", message)\n\n    argstr = ' '.join(args)\n    message = \"Do this String: \" + str(message) + argstr\n    graph = {'tag': {'name': 'tagname', 'value': 'tagvalue'}, 'name': 'distance', 'value': randrange(50)}\n    print(\"doThis: GRAPH CREATED!\")\n    return {'message': message, 'graph': graph}\n\n\ndef do_that(message, *args, plugs={}, output={}, **kwargs):\n    print(\"Do THAT!\", message)\n\n    argstr = ' '.join(args)\n    return \"Do THAT: \" + str(message) + argstr\n"
		}
	],
	"edges": [
		{
			"source": "ce9e5b0c-3b8e-4101-90c2-2465631c8155.port83504cd133e8429e96f7face9eaef57e",
			"target": "5f136618-8a1f-4b28-a283-0381bfd12376.port309a4be1b1414b16bbc109adf6f7f624",
			"data": {}
		},
		{
			"source": "ce9e5b0c-3b8e-4101-90c2-2465631c8155.port6c3cab548017498caecc73d69ca24d07",
			"target": "cb252c34-adf5-454e-9988-9856c181c7f9.port81c97c4fc5da40edb5ec37f6b530cdfb",
			"data": {}
		},
		{
			"source": "ce9e5b0c-3b8e-4101-90c2-2465631c8155.portcfae41d2c77146bda75a861490f72a1e",
			"target": "cb252c34-adf5-454e-9988-9856c181c7f9.port81c97c4fc5da40edb5ec37f6b530cdfb",
			"data": {}
		},
		{
			"source": "ce9e5b0c-3b8e-4101-90c2-2465631c8155.portcfae41d2c77146bda75a861490f72a1e",
			"target": "f76d247e-d068-42a2-a292-81edbecf8890.port672edf02bd954444959625814783cb9f",
			"data": {}
		},
		{
			"source": "fafd0a2d-dc58-4f39-8ef8-36138c24476c.port65ef8554396d4784a2ed621868ebb535",
			"target": "ce9e5b0c-3b8e-4101-90c2-2465631c8155.port8ac91896de234f54be8ee2cd0d6717dd",
			"data": {}
		}
	],
	"ports": [
		{
			"name": "function: emit_one",
			"icon": "outlet-icon",
			"type": "Output",
			"background": "white",
			"datatype": "Column",
			"schema": null,
			"template": "Object",
			"id": "ce9e5b0c-3b8e-4101-90c2-2465631c8155.port83504cd133e8429e96f7face9eaef57e",
			"description": "A description",
			"queue": "None"
		},
		{
			"name": "one",
			"icon": "fab fa-python",
			"type": "Input",
			"argument": true,
			"function": "emit_one",
			"background": "#eee",
			"datatype": "Column",
			"schema": null,
			"template": "Object",
			"id": "ce9e5b0c-3b8e-4101-90c2-2465631c8155.port8ac91896de234f54be8ee2cd0d6717dd",
			"description": "A description",
			"queue": "None",
			"data": 4
		},
		{
			"name": "error: emit_one",
			"icon": "fas fa-exclamation",
			"type": "Error",
			"background": "white",
			"datatype": "Column",
			"schema": null,
			"template": "Object",
			"id": "ce9e5b0c-3b8e-4101-90c2-2465631c8155.port6c3cab548017498caecc73d69ca24d07",
			"description": "A description",
			"queue": "None"
		},
		{
			"name": "error: bla",
			"icon": "fas fa-exclamation",
			"type": "Error",
			"background": "white",
			"datatype": "Column",
			"schema": null,
			"template": "Object",
			"id": "ce9e5b0c-3b8e-4101-90c2-2465631c8155.portcfae41d2c77146bda75a861490f72a1e",
			"description": "A description",
			"queue": "None"
		},
		{
			"name": "value1",
			"icon": "fas fa-cube",
			"type": "Output",
			"background": "white",
			"datatype": "Column",
			"schema": null,
			"template": "Object",
			"id": "fafd0a2d-dc58-4f39-8ef8-36138c24476c.port65ef8554396d4784a2ed621868ebb535",
			"description": "A description",
			"queue": "None"
		},
		{
			"name": "function: emit_one",
			"icon": "outlet-icon",
			"type": "Output",
			"background": "white",
			"datatype": "Column",
			"schema": null,
			"template": "Object",
			"id": "cb252c34-adf5-454e-9988-9856c181c7f9.port490649c33e594c03b64e3fb495215282",
			"description": "A description",
			"queue": "None"
		},
		{
			"name": "one",
			"icon": "fab fa-python",
			"type": "Input",
			"argument": true,
			"function": "emit_one",
			"background": "white",
			"datatype": "Column",
			"schema": null,
			"template": "Object",
			"id": "cb252c34-adf5-454e-9988-9856c181c7f9.port81c97c4fc5da40edb5ec37f6b530cdfb",
			"description": "A description",
			"queue": "None",
			"data": null
		},
		{
			"name": "function: emit_one",
			"icon": "outlet-icon",
			"type": "Output",
			"background": "white",
			"datatype": "Column",
			"schema": null,
			"template": "Object",
			"id": "5f136618-8a1f-4b28-a283-0381bfd12376.port60a0ed041d124f8cbd8d3daa35e048c9",
			"description": "A description",
			"queue": "None"
		},
		{
			"name": "one",
			"icon": "fab fa-python",
			"type": "Input",
			"argument": true,
			"function": "emit_one",
			"background": "white",
			"datatype": "Column",
			"schema": null,
			"template": "Object",
			"id": "5f136618-8a1f-4b28-a283-0381bfd12376.port309a4be1b1414b16bbc109adf6f7f624",
			"description": "A description",
			"queue": "None",
			"data": null
		},
		{
			"name": "function: emit_one",
			"icon": "outlet-icon",
			"type": "Output",
			"background": "white",
			"datatype": "Column",
			"schema": null,
			"template": "Object",
			"id": "f76d247e-d068-42a2-a292-81edbecf8890.port23e187e469cb48a3ae97f9cfcb890c42",
			"description": "A description",
			"queue": "None"
		},
		{
			"name": "one",
			"icon": "fab fa-python",
			"type": "Input",
			"argument": true,
			"function": "emit_one",
			"background": "white",
			"datatype": "Column",
			"schema": null,
			"template": "Object",
			"id": "f76d247e-d068-42a2-a292-81edbecf8890.port672edf02bd954444959625814783cb9f",
			"description": "A description",
			"queue": "None",
			"data": null
		}
	],
	"groups": [],
	"variables": []
}