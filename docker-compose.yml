version: '3.9'

services:

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  agent2:
    build: 
      context: .
      dockerfile: docker/Dockerfile.supervisor
    container_name: agent2
    hostname: agent2
    image: supervisor:latest
    environment: 
      - "EVENTS=events"
      - "GIT_LOGIN=https://radiantone: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@github.com"
    command:  "/opt/pyfi/venv/bin/pyfi -i /opt/pyfi/pyfi.ini agent start"
    ports:
      - 8004:8002
    depends_on:
      - redis
      - postgres
    profiles: 
      - agent
    volumes:
      - ./conf/supervisord-agent.conf:/etc/supervisor/conf.d/supervisord.conf

  agent1:
    build: 
      context: .
      dockerfile: docker/Dockerfile.supervisor
    container_name: agent1
    hostname: agent1
    image: supervisor:latest
    volumes: 
      - ./conf/git-credentials:/root/.git-credentials
    environment: 
      - "EVENTS=events"
      - "GIT_LOGIN=https://radiantone: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@github.com"
    command:  "/opt/pyfi/venv/bin/pyfi -i /opt/pyfi/pyfi.ini agent start"
    ports:
      - 8003:8002
    depends_on:
      - redis
      - postgres
    profiles: 
      - agent
    volumes:
      - ./conf/supervisord-agent.conf:/etc/supervisor/conf.d/supervisord.conf

  elasticsearch:
      image: elasticsearch:7.7.0
      container_name: elasticsearch
      hostname: elasticsearch
      environment:
          - "discovery.type=single-node"
      ports:
          - 9200:9200
          - 9300:9300

  # http://localhost:5601
  kibana:
      image: kibana:7.7.0
      container_name: kibana
      hostname: kibana
      ports:
          - 5601:5601
      links:
          - elasticsearch:elasticsearch
      depends_on:
          - elasticsearch

  # http://localhost:5001
  logs:
    build:
      context: .
      dockerfile: docker/Dockerfile.logs
    container_name: logs
    image: logs:latest

  # http://localhost:8008
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.com
      - PGADMIN_DEFAULT_PASSWORD=SuperSecret
    ports:
      - 8008:80

  # Console - http://localhost:8888
  flower:  
    image: mher/flower:latest
    container_name: flower
    hostname: flower
    environment:
      - CELERY_BROKER_URL=pyamqp://rabbitmq
      - FLOWER_PORT=8888
    ports:  
      - 8888:8888  

  nginx: 
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./app/dist/spa:/var/share/html
      - ./conf/mime.types:/etc/nginx/conf/mime.types
      - ./logs:/etc/nginx/logs
    ports:
      - 80:80
      - 443:443

  # Admin UI - http://localhost:15672/
  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3.8-management
    restart: always
    volumes: 
      - ./conf/enabled_plugins:/etc/rabbitmq/enabled_plugins
    environment:
      - RABBITMQ_ERLANG_COOKIE=cluster_cookie
    ports:
      - 5671:5671
      - 5672:5672
      - 15672:15672
      - 4369:4369

  rabbitmq2:
    container_name: rabbitmq2
    hostname: rabbitmq2
    image: rabbitmq:3.8-management
    volumes: 
      - ./conf/enabled_plugins:/etc/rabbitmq/enabled_plugins
    links:
      - rabbitmq
    environment:
      - RABBITMQ_ERLANG_COOKIE=cluster_cookie
    ports:
      - "5673:5672"
      - "15673:15672"

  postgres:
    container_name: postgres
    image: postgres
    hostname: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pyfi101
      POSTGRES_DB: pyfi
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 6

  redis:
    container_name: redis
    hostname: redis
    image: redis
    restart: always
    ports:
      - 6379:6379

  # http://localhost:8001
  insights:
    container_name: insights
    depends_on: 
      - redis
    image: redislabs/redisinsight:latest
    ports:
      - 8001:8001
    volumes:
      - ./data/redisinsight:/db

volumes:
  pgdata:
