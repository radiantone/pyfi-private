version: '1.0'

# This creates database records and a running scheduler will do the deployments
network:
  name: network-1
  scheduler:
    name: sched1
    strategy: BALANCED
  queues:
    pyfi.queue1:
    pyfi.queue2:
    pyfi.queue3:
  nodes:
    phoenix:
      clean: true
      hostname: phoenix
      ssh:
        key: '/home/darren/.ssh/id_rsa.pub'
        user: 'darren'
      path: /home/darren/node1
      ini: /home/darren/pyfi.ini
      polar: /home/darren/pyfi.polar
      agents:
        agent1:
          parameters:
            pool: 5
            size: 10
          processors:
            proc1: 
              status: ready
              requested_status: update
              branch: main
              pyfirepo: 'https://radiantone:xxxx@github.com/radiantone/pyfi-private#egg=pyfi'
              gitrepo: 'https://github.com/radiantone/pyfi-processors#egg=ext-processor'
              commit:
              module: ext.processors.sample
              beat: true
              workers: 6
              sockets:
                ext.processors.sample.do_something:
                  interval: 5
                  queue: 
                    name: pyfi.queue1
                  task:
                    function: 
                      name: do_something
      services:
        docker:
          websockets:
            daemon: true
            environment:
              - LISTEN_PROCESSOR=proc1
              - LISTEN_CHANNEL=task
    agent2:
      clean: false
      build: false
      hostname: agent2
      ini: /home/darren/pyfi.ini
      polar: /home/darren/pyfi.polar
      ssh:
        key: '/home/darren/.ssh/id_rsa.pub'
        user: 'darren'
      path: /home/darren/node1
      agents:
        agent1:
          parameters:
            pool: 5
            size: 10
          processors:
            proc3: 
              status: ready
              requested_status: update
              branch: main
              pyfirepo: 'https://radiantone:xxxx@github.com/radiantone/pyfi-private#egg=pyfi'
              gitrepo: 'https://github.com/radiantone/pyfi-processors#egg=ext-processor'
              commit:
              module: ext.processors.sample
              beat: true
              workers: 6
              sockets:
                proc3.do_something:
                  interval: -1
                  queue: 
                    name: pyfi.queue3
                  task:
                    function: 
                      name: do_something          
            proc4: 
              branch: main
              pyfirepo: 'https://radiantone:xxxx@github.com/radiantone/pyfi-private#egg=pyfi'
              gitrepo: 'https://github.com/radiantone/pyfi-processors#egg=ext-processor'
              commit:
              module: ext.processors.sample
              beat: false
              workers: 1
              sockets:
                ext.processors.sample.do_this:
                  queue: 
                    name: pyfi.queue3
                  task:
                    function: 
                      arguments: true
                      name: do_this                        
  deployments:
    proc1.d1:
      hostname: phoenix
      cpus: 3
      processor: proc1
    proc3.d2:
      hostname: agent2
      cpus: 3
      processor: proc3      
    proc4.d1:
      hostname: agent2
      cpus: 3
      processor: proc4
  plugs:
    plug1a:
      enabled: true
      source: ext.processors.sample.do_something
      target: ext.processors.sample.do_this
      queue:
        name: pyfi.queue3

# This will create work records which the scheduler will deploy
work:
  


# This will create immediate executions using the API models
executions:
